<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SLR_Analyst</name>
    </assembly>
    <members>
        <member name="T:SLR_Analyst.Module1">
            <summary>
            This demonstration illustrates custom ArcGIS Pro map exploration functionality provided through a Pro SDK add-in.  The scenario uses a sample Pro add-in, Sea Level Rise Analyst, which can assist urban planning and public safety organizations in quickly identifying areas affected by sea level rise within a study area in Miami Beach, Florida.  
            The general concept of the add-in is based on the [NOAA Sea Level Rise Viewer](https://coast.noaa.gov/slr/) web application.	The add-in and dataset allow for identification and selection from three layers � land use, parcels and streets.  
            The custom add-in demonstrates three main Pro SDK capabilities:
            -	Interaction with and selection of layers within the project from a custom add-in pane.
            -	Dynamic creation of a temporary report pane.
            -	Basic text reporting of code attributes within a selection set.  
            
            DATA SOURCES AND DESCRIPTION (Refer to Data Distribution Permission statement at the end of this document)
            The dataset is comprised of data clipped for the study area from the following sources:
            - Land use, Parcel and Street data layers provided by [Miami-Dade County GIS Open Data site](http://gis-mdc.opendata.arcgis.com/)
            - Sea Level Rise layers for 1 � 6 feet provided by [NOAA SLR data site](https://coast.noaa.gov/slrdata/)
            </summary>
            <remarks>
            1. Download the Community Sample data (see under the 'Resources' section for downloading sample data)
            1. Make sure that the Sample data is unzipped in c:\data 
            1. The project used for this sample is 'C:\Data\SLR_Analyst\SLR_Analyst_Data.ppkx'
            1. In Visual Studio click the Build menu. Then select Build Solution.
            1. Launch the debuuger to open ArcGIS Pro.
            1. ArcGIS Pro will open, open the SLR_Analyst_Data.ppkx project
            1. Once the project is open and loaded, the first step is to open the custom SLR Analyst pane. To do this, select the Add-In tab and press the Show SLR Tools add-in button to open the SLR Analyst dockpane.
            1. Use your choice of navigation to zoom to an extent within the study area where you can clearly see land use and parcel polygons.  Zooming to 1:6,000 scale should work well initially.
            1. Choose layer(s) to select and then choose sea level rise via the slider 
            1. Click 'Run Selection' to run the analysis
            ![UI](Screenshots/Screen1.png)
            </remarks>
        </member>
        <member name="P:SLR_Analyst.Module1.Current">
            <summary>
            Retrieve the singleton instance to this module here
            </summary>
        </member>
        <member name="M:SLR_Analyst.Module1.CanUnload">
            <summary>
            Called by Framework when ArcGIS Pro is closing
            </summary>
            <returns>False to prevent Pro from closing, otherwise True</returns>
        </member>
        <member name="T:SLR_Analyst.SLR_DockpaneView">
            <summary>
            Interaction logic for SLR_DockpaneView.xaml
            </summary>
            <summary>
            SLR_DockpaneView
            </summary>
        </member>
        <member name="M:SLR_Analyst.SLR_DockpaneView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:SLR_Analyst.SLR_DockpaneViewModel.Show">
            <summary>
            Show the DockPane.
            </summary>
        </member>
        <member name="F:SLR_Analyst.SLR_DockpaneViewModel._heading">
            <summary>
            Text shown near the top of the DockPane.
            </summary>
        </member>
        <member name="T:SLR_Analyst.SLR_Dockpane_ShowButton">
            <summary>
            Button implementation to show the DockPane.
            </summary>
        </member>
        <member name="T:SLR_Analyst.SLR_PaneView">
            <summary>
            Interaction logic for SLR_PaneView.xaml
            </summary>
            <summary>
            SLR_PaneView
            </summary>
        </member>
        <member name="M:SLR_Analyst.SLR_PaneView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:SLR_Analyst.SLR_PaneViewModel.#ctor(ArcGIS.Core.CIM.CIMView)">
            <summary>
            Consume the passed in CIMView. Call the base constructor to wire up the CIMView.
            </summary>
        </member>
        <member name="M:SLR_Analyst.SLR_PaneViewModel.Create">
            <summary>
            Create a new instance of the pane.
            </summary>
        </member>
        <member name="M:SLR_Analyst.SLR_PaneViewModel.UpdateLandUse(System.Collections.Generic.IList{SLR_Analyst.KeyValueWithTooltip})">
            <summary>
            Updates the LandUse observable collection on the UI thread.  This is because of a bug in the
            WPFToolKit DataVisualization library which doesn't allow updating on a brackground thread
            </summary>
            <param name="keyValueWithTooltips"></param>
        </member>
        <member name="M:SLR_Analyst.SLR_PaneViewModel.UpdateStreet(System.Collections.Generic.IList{SLR_Analyst.KeyValueWithTooltip})">
            <summary>
            Updates the Street observable collection on the UI thread.  This is because of a bug in the
            WPFToolKit DataVisualization library which doesn't allow updating on a brackground thread
            </summary>
            <param name="keyValueWithTooltips"></param>
        </member>
        <member name="M:SLR_Analyst.SLR_PaneViewModel.UpdateParcel(System.Collections.Generic.IList{SLR_Analyst.KeyValueWithTooltip})">
            <summary>
            Updates the Parcel observable collection on the UI thread.  This is because of a bug in the
            WPFToolKit DataVisualization library which doesn't allow updating on a brackground thread
            </summary>
            <param name="keyValueWithTooltips"></param>
        </member>
        <member name="P:SLR_Analyst.SLR_PaneViewModel.LandUseChartResult">
            <summary>
            Land Use Chart
            </summary>
        </member>
        <member name="P:SLR_Analyst.SLR_PaneViewModel.ParcelChartResult">
            <summary>
            Parcel Chart
            </summary>
        </member>
        <member name="P:SLR_Analyst.SLR_PaneViewModel.StreetChartResult">
            <summary>
            Street Chart
            </summary>
        </member>
        <member name="F:SLR_Analyst.SLR_PaneViewModel._reportText">
            <summary>
            Report Text Box Updates
            </summary>
        </member>
        <member name="P:SLR_Analyst.SLR_PaneViewModel.ViewState">
            <summary>
            Must be overridden in child classes used to persist the state of the view to the CIM.
            </summary>
        </member>
        <member name="M:SLR_Analyst.SLR_PaneViewModel.InitializeAsync">
            <summary>
            Called when the pane is initialized.
            </summary>
        </member>
        <member name="M:SLR_Analyst.SLR_PaneViewModel.UninitializeAsync">
            <summary>
            Called when the pane is uninitialized.
            </summary>
        </member>
        <member name="T:SLR_Analyst.SLR_Pane_OpenButton">
            <summary>
            Button implementation to create a new instance of the pane and activate it.
            </summary>
        </member>
    </members>
</doc>
